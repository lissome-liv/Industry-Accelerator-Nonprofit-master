{"properties":{"connectionReferences":{"shared_commondataserviceforapps":{"runtimeSource":"embedded","connection":{},"api":{"name":"shared_commondataserviceforapps"}}},"definition":{"$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#","contentVersion":"1.0.0.0","parameters":{"$connections":{"defaultValue":{},"type":"Object"},"$authentication":{"defaultValue":{},"type":"SecureObject"}},"triggers":{"When_a_Project_Budget_Line_is_created":{"type":"OpenApiConnectionWebhook","inputs":{"host":{"connectionName":"shared_commondataserviceforapps","operationId":"SubscribeWebhookTrigger","apiId":"/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"},"parameters":{"subscriptionRequest/message":1,"subscriptionRequest/entityname":"msnfpe_projectbudgetline","subscriptionRequest/scope":4},"authentication":"@parameters('$authentication')"}}},"actions":{"Get_Project_Budget_info":{"runAfter":{},"type":"OpenApiConnection","inputs":{"host":{"connectionName":"shared_commondataserviceforapps","operationId":"GetItem","apiId":"/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"},"parameters":{"entityName":"msnfp_budgets","recordId":"@triggerOutputs()?['body/_msnfpe_msnfp_projectbudgetid_value']","$select":"statuscode, _transactioncurrencyid_value","$expand":"msnfpe_StartingPeriodId($select=msnfpe_planningperiodid,msnfpe_period_startdate,_msnfpe_nextperiodid_value), msnfpe_EndingPeriodId($select=msnfpe_planningperiodid,msnfpe_period_startdate)"},"authentication":"@parameters('$authentication')"}},"Parse_Budget_info":{"runAfter":{"Get_Project_Budget_info":["Succeeded"]},"type":"ParseJson","inputs":{"content":"@outputs('Get_Project_Budget_info')?['body']","schema":{"type":"object","properties":{"statuscode":{"type":"integer"},"msnfp_budgetid":{"type":"string"},"msnfpe_StartingPeriodId":{"type":"object","properties":{"msnfpe_planningperiodid":{"type":"string"},"msnfpe_period_startdate":{"type":"string"},"_msnfpe_nextperiodid_value":{"type":"string"}}},"msnfpe_EndingPeriodId":{"type":"object","properties":{"msnfpe_planningperiodid":{"type":"string"},"msnfpe_period_startdate":{"type":"string"}}},"_transactioncurrencyid_value":{"type":"string"}}}}},"Ensure_Project_Budget_is_not_in_Submitted_status":{"actions":{"Set_PeriodAmount":{"runAfter":{"Add_EndingPeriod_to_PeriodCollection":["Succeeded"]},"type":"SetVariable","inputs":{"name":"PeriodAmount","value":"@div(add(mul(div(triggerOutputs()?['body/msnfpe_budgetline_amount'],length(variables('PeriodCollection'))),1000),sub(if(greaterOrEquals(mod(mul(div(triggerOutputs()?['body/msnfpe_budgetline_amount'],length(variables('PeriodCollection'))),1000),10),5),10,0),mod(mul(div(triggerOutputs()?['body/msnfpe_budgetline_amount'],length(variables('PeriodCollection'))),1000),10))),1000)"},"description":"Complicated formula to get to a number with two decimals"},"Add_EndingPeriod_to_PeriodCollection":{"runAfter":{"Check_to_see_if_the_Starting_and_Ending_Periods_are_the_same":["Succeeded"]},"type":"AppendToArrayVariable","inputs":{"name":"PeriodCollection","value":"@body('Parse_Budget_info')?['msnfpe_EndingPeriodId']?['msnfpe_planningperiodid']"}},"Create_each_in_PeriodCollection":{"foreach":"@variables('PeriodCollection')","actions":{"Compose_ProjectBudgetLineId":{"runAfter":{},"type":"Compose","inputs":"@triggerOutputs()?['body/msnfpe_projectbudgetlineid']","description":"This shouldn't be necessary, but the property isn't showing up correctly in Dynamic Content"},"If_FirstBudgetLinePeriod_is_empty":{"actions":{"Grab_ID_of_FirstBudgetLinePeriod":{"runAfter":{},"type":"SetVariable","inputs":{"name":"FirstBudgetLinePeriod","value":"@outputs('Create_a_new_Budget_Line_Period')?['body/msnfpe_budgetlineperiodid']"}}},"runAfter":{"Create_a_new_Budget_Line_Period":["Succeeded"]},"expression":{"equals":["@variables('FirstBudgetLinePeriod')","@string('')"]},"type":"If"},"Create_a_new_Budget_Line_Period":{"runAfter":{"Compose_ProjectBudgetLineId":["Succeeded"]},"type":"OpenApiConnection","inputs":{"host":{"connectionName":"shared_commondataserviceforapps","operationId":"CreateRecord","apiId":"/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"},"parameters":{"entityName":"msnfpe_budgetlineperiods","item/msnfpe_periodname":"Planned Amount","item/msnfpe_amount":"@float(variables('PeriodAmount'))","item/msnfpe_PlanningPeriodId@odata.bind":"/msnfpe_planningperiods(@{items('Create_each_in_PeriodCollection')})","item/transactioncurrencyid@odata.bind":"/transactioncurrencies(@{body('Parse_Budget_info')?['_transactioncurrencyid_value']})","item/msnfpe_ProjectBudgetLineId@odata.bind":"/msnfpe_projectbudgetlines(@{outputs('Compose_ProjectBudgetLineId')})"},"authentication":"@parameters('$authentication')"}}},"runAfter":{"Set_PeriodAmount":["Succeeded"]},"type":"Foreach"},"Check_if_Summed_Periods_less_than_Budget_Line_Amount":{"actions":{"Update_first_BudgetLinePeriod_Amount":{"runAfter":{},"type":"OpenApiConnection","inputs":{"host":{"connectionName":"shared_commondataserviceforapps","operationId":"UpdateRecord","apiId":"/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"},"parameters":{"entityName":"msnfpe_budgetlineperiods","recordId":"@variables('FirstBudgetLinePeriod')","item/msnfpe_amount":"@add(float(variables('PeriodAmount')),variables('PeriodAmountTotalDifference'))"},"authentication":"@parameters('$authentication')"}}},"runAfter":{"Set_PeriodAmountTotalDifference":["Succeeded"]},"expression":{"and":[{"not":{"equals":["@variables('PeriodAmountTotalDifference')",0]}},{"not":{"equals":["@variables('FirstBudgetLinePeriod')","@string('')"]}}]},"type":"If"},"Set_PeriodAmountTotalDifference":{"runAfter":{"Create_each_in_PeriodCollection":["Succeeded"]},"type":"SetVariable","inputs":{"name":"PeriodAmountTotalDifference","value":"@sub(triggerOutputs()?['body/msnfpe_budgetline_amount'], mul(variables('PeriodAmount'),length(variables('PeriodCollection'))))"},"description":"Get the difference between the total line amount and the total of what was distributed among periods"},"Check_to_see_if_the_Starting_and_Ending_Periods_are_the_same":{"actions":{},"runAfter":{},"else":{"actions":{"Add_Periods_to_Collection_until_Ending_Period":{"actions":{"Update_NextPeriodToAdd":{"runAfter":{"Parse_NextPeriodToAdd_info":["Succeeded"]},"type":"SetVariable","inputs":{"name":"NextPeriodToAdd","value":"@body('Parse_NextPeriodToAdd_info')?['_msnfpe_nextperiodid_value']"}},"Get_updated_NextPeriodToAdd_info":{"runAfter":{"Add_NextPlanningPeriod_to_PeriodCollection":["Succeeded"]},"type":"OpenApiConnection","inputs":{"host":{"connectionName":"shared_commondataserviceforapps","operationId":"GetItem","apiId":"/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"},"parameters":{"entityName":"msnfpe_planningperiods","recordId":"@variables('NextPeriodToAdd')","$select":"_msnfpe_nextperiodid_value"},"authentication":"@parameters('$authentication')"}},"Add_NextPlanningPeriod_to_PeriodCollection":{"runAfter":{},"type":"AppendToArrayVariable","inputs":{"name":"PeriodCollection","value":"@variables('NextPeriodToAdd')"}},"Parse_NextPeriodToAdd_info":{"runAfter":{"Get_updated_NextPeriodToAdd_info":["Succeeded"]},"type":"ParseJson","inputs":{"content":"@outputs('Get_updated_NextPeriodToAdd_info')?['body']","schema":{"type":"object","properties":{"_msnfpe_nextperiodid_value":{"type":"string"}}}}}},"runAfter":{},"expression":"@equals(variables('NextPeriodToAdd'), body('Parse_Budget_info')?['msnfpe_EndingPeriodId']?['msnfpe_planningperiodid'])","limit":{"count":60,"timeout":"PT1H"},"type":"Until"}}},"expression":{"equals":["@variables('NextPeriodToAdd')","@body('Parse_Budget_info')?['msnfpe_EndingPeriodId']?['msnfpe_planningperiodid']"]},"type":"If"}},"runAfter":{"Initialize_empty_PeriodAmountTotalDifference":["Succeeded"]},"else":{"actions":{"Cancel_flow":{"runAfter":{},"type":"Terminate","inputs":{"runStatus":"Cancelled"}}}},"expression":{"not":{"equals":["@body('Parse_Budget_info')?['statuscode']",796500000]}},"type":"If","description":"This check is here because Submitted is the only Active state where new lines should not be created and therefore no periods added"},"Initialize_empty_PeriodAmount":{"runAfter":{"Initialize_empty_FirstBudgetLinePeriod":["Succeeded"]},"type":"InitializeVariable","inputs":{"variables":[{"name":"PeriodAmount","type":"Float"}]}},"Initialize_NextPeriodToAdd":{"runAfter":{"Initialize_empty_PeriodCollection":["Succeeded"]},"type":"InitializeVariable","inputs":{"variables":[{"name":"NextPeriodToAdd","type":"String","value":"@body('Parse_Budget_info')?['msnfpe_StartingPeriodId']?['msnfpe_planningperiodid']"}]}},"Initialize_empty_PeriodCollection":{"runAfter":{"Parse_Budget_info":["Succeeded"]},"type":"InitializeVariable","inputs":{"variables":[{"name":"PeriodCollection","type":"Array"}]}},"Initialize_empty_PeriodAmountTotalDifference":{"runAfter":{"Initialize_empty_PeriodAmount":["Succeeded"]},"type":"InitializeVariable","inputs":{"variables":[{"name":"PeriodAmountTotalDifference","type":"Float"}]}},"Initialize_empty_FirstBudgetLinePeriod":{"runAfter":{"Initialize_NextPeriodToAdd":["Succeeded"]},"type":"InitializeVariable","inputs":{"variables":[{"name":"FirstBudgetLinePeriod","type":"String"}]},"description":"Holds the ID of the first budget line period created for amount adjustment if needed"}},"outputs":{}}},"schemaVersion":"1.0.0.0"}